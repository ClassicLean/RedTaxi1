<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logo1" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rkJggg==
</value>
  </data>
</root>